/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package matchinggame;

import java.awt.Font;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.OutputStreamWriter;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.UIManager;

/**
 *
 * @author YorickDigsGraves
 */
public class ForName extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    String name = "";
    ArrayList<PlayerInfo> info = new ArrayList<>();
    ArrayList<PlayerInfo> hold = new ArrayList<>();
    FileOutputStream fos, fos1;
    ObjectOutputStream oos;

    FileInputStream fis;
    ObjectInputStream ois;

    File f;

    public ForName() {
        initComponents();
    }

    void ifFile() throws IOException, ClassNotFoundException {

        try {
            f = new File("playerinfo.txt");
            fos = new FileOutputStream(f);
            try {
                oos = new ObjectOutputStream(fos);

            } catch (IOException ex) {
                ex.getMessage();
            }
            if (jTextField1.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Enter Your Name");
            } else {
                
                name = name.substring(0, Math.min(name.length(),8));
                PlayerInfo temp = new PlayerInfo(name, 1);

                info.add(temp);

                try {
                    oos.writeObject(info);
                    oos.flush();
                    oos.close();
                } catch (IOException asa) {
                    asa.getMessage();
                }

                try {
                    fos.close();
                } catch (IOException mew) {
                    mew.getMessage();
                }


                GAME gg = new GAME();
                gg.setVisible(true);
                this.dispose();
            }
        } catch (FileNotFoundException fs) {
            fs.getMessage();
        }
    }

    void elseFile() throws IOException, ClassNotFoundException {

        try {
            fis = new FileInputStream("playerinfo.txt");
            ois = new ObjectInputStream(fis);

            info = (ArrayList<PlayerInfo>) ois.readObject();

        } catch (FileNotFoundException sdas) {
            sdas.getMessage();
        } catch (IOException asd) {
            asd.getMessage();
        } catch (ClassNotFoundException gkg) {
            gkg.getMessage();
        }

        try {
            f = new File("playerinfo.txt");
            fos = new FileOutputStream(f);
            try {
                oos = new ObjectOutputStream(fos);

            } catch (IOException ex) {
                ex.getMessage();
            }
            if (jTextField1.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Enter Your Name");
            } else {

                name = name.substring(0, Math.min(name.length(),8));

                PlayerInfo temp = new PlayerInfo(name, 1);
                
                info.add(temp);

                try {
                    oos.writeObject(info);
                    oos.flush();
                    oos.close();
                } catch (IOException asa) {
                    asa.getMessage();
                }

                try {
                    fos.close();
                } catch (IOException mew) {
                    mew.getMessage();
                }

                GAME gg = new GAME();
                gg.setVisible(true);
                this.dispose();
            }
        } catch (FileNotFoundException fs) {
            fs.getMessage();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(800, 350));
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Tempus Sans ITC", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Enter Your Name");

        jTextField1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jTextField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField1.setToolTipText("name must contain at least 1 character or at most 8 characters");
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField1KeyReleased(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(255, 102, 51));
        jButton1.setFont(new java.awt.Font("Tempus Sans ITC", 1, 14)); // NOI18N
        jButton1.setText("DONE");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(119, 119, 119)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField1)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(157, 157, 157)
                        .addComponent(jButton1)))
                .addContainerGap(130, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(52, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyReleased
        name = jTextField1.getText();
    }//GEN-LAST:event_jTextField1KeyReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        File fas = new File("playerinfo.txt");
        if (fas.length() == 0) {
            try {
                ifFile();
            } catch (IOException ex) {
                Logger.getLogger(ForName.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(ForName.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            try {
                elseFile();
            } catch (IOException ex) {
                Logger.getLogger(ForName.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(ForName.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ForName.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ForName.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ForName.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ForName.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ForName().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
